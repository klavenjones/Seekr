"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmailProfile = exports.createUser = void 0;
var client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
var createUser = function (_a) {
    var client = _a.client, logger = _a.logger, tableOptions = _a.tableOptions;
    return function (profile) {
        var DEBUG_ID = 'createUser';
        logger.debug(DEBUG_ID, profile);
        var usersTable = tableOptions.usersTable;
        var email = profile.email;
        var emailVerified = !exports.isEmailProfile(profile)
            ? null
            : profile === null || profile === void 0 ? void 0 : profile.emailVerified;
        var name = !exports.isEmailProfile(profile)
            ? profile.name
            : email.split('@')[0];
        var id = !exports.isEmailProfile(profile) ? profile === null || profile === void 0 ? void 0 : profile.id : email;
        var image = !exports.isEmailProfile(profile) ? profile === null || profile === void 0 ? void 0 : profile.image : null;
        var user = {
            email: email,
            image: image,
            name: name,
        };
        if (!usersTable) {
            logger.debug(DEBUG_ID, 'userTable name was not provided');
            return Promise.resolve(user);
        }
        return new Promise(function (resolve, reject) {
            return client
                .send(new client_dynamodb_1.PutItemCommand({
                TableName: usersTable,
                Item: {
                    email: email ? { S: email } : { NULL: true },
                    emailVerified: emailVerified
                        ? { S: emailVerified.toISOString() }
                        : { NULL: true },
                    id: { S: id },
                    image: image ? { S: image } : { NULL: true },
                    name: { S: name },
                },
            }))
                .then(function (clientResponse) {
                logger.debug(DEBUG_ID, JSON.stringify({ clientResponse: clientResponse }));
                return resolve(user);
            })
                .catch(function (error) {
                logger.error(DEBUG_ID, error);
                reject(error);
            });
        });
    };
};
exports.createUser = createUser;
var isEmailProfile = function (profile) {
    return !('id' in profile) && 'email' in profile;
};
exports.isEmailProfile = isEmailProfile;
//# sourceMappingURL=createUser.js.map