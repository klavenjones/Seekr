{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/klay/Documents/Seekr/client/components/pages/dashboard/jobtabs/wishlist.jsx\";\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport { JobList } from '../../../listitems';\nimport { Loader } from '../../../loader';\nexport function WishList({\n  refresh\n}) {\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  const fetchJobs = async () => {\n    let response = await axios.post('/api/jobs/status', {\n      status: 'wishlist'\n    });\n\n    if (response.data.jobs) {\n      setLoading(false);\n      setJobs(response.data.jobs);\n    }\n  };\n\n  useEffect(async () => {\n    fe;\n  }, []); // useEffect(async () => {\n  //   let response = await axios.post('/api/jobs/status', { status: 'wishlist' })\n  //   if (response.data.jobs) {\n  //     setLoading(false)\n  //     setJobs(response.data.jobs)\n  //   }\n  // })\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-gray-500 text-xs font-medium uppercase tracking-wide\",\n        children: \"My Wishlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-3 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(JobList, {\n          jobs: jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/klay/Documents/Seekr/client/components/pages/dashboard/jobtabs/wishlist.jsx"],"names":["axios","useState","useEffect","useContext","JobList","Loader","WishList","refresh","jobs","setJobs","loading","setLoading","fetchJobs","response","post","status","data","fe"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AACpC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMW,SAAS,GAAG,YAAY;AAC5B,QAAIC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,kBAAX,EAA+B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA/B,CAArB;;AACA,QAAIF,QAAQ,CAACG,IAAT,CAAcR,IAAlB,EAAwB;AACtBG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAACI,QAAQ,CAACG,IAAT,CAAcR,IAAf,CAAP;AACD;AACF,GAND;;AAQAN,EAAAA,SAAS,CAAC,YAAY;AACpBe,IAAAA,EAAE;AACH,GAFQ,EAEN,EAFM,CAAT,CAboC,CAiBpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BAEE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,2DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,oEAAd;AAAA,kBACGP,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAgB,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA;AAD1B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAaD","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect, useContext } from 'react'\n\nimport { JobList } from '../../../listitems'\nimport { Loader } from '../../../loader'\n\nexport function WishList({ refresh }) {\n  const [jobs, setJobs] = useState([])\n\n  const [loading, setLoading] = useState(true)\n\n  const fetchJobs = async () => {\n    let response = await axios.post('/api/jobs/status', { status: 'wishlist' })\n    if (response.data.jobs) {\n      setLoading(false)\n      setJobs(response.data.jobs)\n    }\n  }\n\n  useEffect(async () => {\n    fe\n  }, [])\n\n  // useEffect(async () => {\n  //   let response = await axios.post('/api/jobs/status', { status: 'wishlist' })\n  //   if (response.data.jobs) {\n  //     setLoading(false)\n  //     setJobs(response.data.jobs)\n  //   }\n  // })\n\n  return (\n    <>\n      {/* This example requires Tailwind CSS v2.0+ */}\n      <div>\n        <h2 className='text-gray-500 text-xs font-medium uppercase tracking-wide'>\n          My Wishlist\n        </h2>\n        <ul className='mt-3 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4'>\n          {loading ? <Loader /> : <JobList jobs={jobs} />}\n        </ul>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}