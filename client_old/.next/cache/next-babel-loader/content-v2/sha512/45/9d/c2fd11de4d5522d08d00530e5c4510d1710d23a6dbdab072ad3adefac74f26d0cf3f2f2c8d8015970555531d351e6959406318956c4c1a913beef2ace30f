{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { usePrevious } from './usePrevious';\nimport { useEffect, useState, useReducer } from 'react';\nexport function useJobs(status) {\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: refreshed,\n    1: setRefreshed\n  } = useState(0);\n  const {\n    1: forceUpdate\n  } = useReducer(x => x + 1, 0); // FORCE UPDATE HACK\n\n  function refreshPage() {\n    window.location();\n  }\n\n  const fetchJobsByStatus = async status => {\n    try {\n      let response = await axios.post('/api/jobs/status', {\n        status: status\n      });\n      setJobs(response.data.jobs);\n      setLoading(false);\n    } catch (error) {\n      console.log('Hook', error.message);\n    }\n  };\n\n  const editJob = async (jobId, data) => {\n    await axios.put('/api/jobs/update', _objectSpread({\n      jobId\n    }, data));\n    refreshPage();\n  };\n\n  const deleteJob = async jobId => {\n    try {\n      await axios.delete(`/api/jobs/delete`, {\n        data: {\n          jobId: jobId\n        }\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(async () => {\n    fetchJobsByStatus(status);\n  }, []);\n  return {\n    jobs,\n    editJob,\n    deleteJob,\n    loading\n  };\n}","map":{"version":3,"sources":["/Users/klay/Documents/Seekr/client/components/hooks/useJobs.jsx"],"names":["axios","usePrevious","useEffect","useState","useReducer","useJobs","status","jobs","setJobs","loading","setLoading","refreshed","setRefreshed","forceUpdate","x","refreshPage","window","location","fetchJobsByStatus","response","post","data","error","console","log","message","editJob","jobId","put","deleteJob","delete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC9B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAAGU;AAAH,MAAkBT,UAAU,CAAEU,CAAD,IAAOA,CAAC,GAAG,CAAZ,EAAe,CAAf,CAAlC,CAJ8B,CAIsB;;AAEpD,WAASC,WAAT,GAAuB;AACrBC,IAAAA,MAAM,CAACC,QAAP;AACD;;AAED,QAAMC,iBAAiB,GAAG,MAAOZ,MAAP,IAAkB;AAC1C,QAAI;AACF,UAAIa,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,kBAAX,EAA+B;AAClDd,QAAAA,MAAM,EAAEA;AAD0C,OAA/B,CAArB;AAGAE,MAAAA,OAAO,CAACW,QAAQ,CAACE,IAAT,CAAcd,IAAf,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAND,CAME,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAAK,CAACG,OAA1B;AACD;AACF,GAVD;;AAYA,QAAMC,OAAO,GAAG,OAAOC,KAAP,EAAcN,IAAd,KAAuB;AACrC,UAAMrB,KAAK,CAAC4B,GAAN,CAAU,kBAAV;AACJD,MAAAA;AADI,OAEDN,IAFC,EAAN;AAIAN,IAAAA,WAAW;AACZ,GAND;;AAQA,QAAMc,SAAS,GAAG,MAAOF,KAAP,IAAiB;AACjC,QAAI;AACF,YAAM3B,KAAK,CAAC8B,MAAN,CAAc,kBAAd,EAAiC;AACrCT,QAAAA,IAAI,EAAE;AACJM,UAAAA,KAAK,EAAEA;AADH;AAD+B,OAAjC,CAAN;AAKD,KAND,CAME,OAAOL,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,GAVD;;AAYAvB,EAAAA,SAAS,CAAC,YAAY;AACpBgB,IAAAA,iBAAiB,CAACZ,MAAD,CAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEC,IAAAA,IAAF;AAAQmB,IAAAA,OAAR;AAAiBG,IAAAA,SAAjB;AAA4BpB,IAAAA;AAA5B,GAAP;AACD","sourcesContent":["import axios from 'axios'\nimport { usePrevious } from './usePrevious'\nimport { useEffect, useState, useReducer } from 'react'\n\nexport function useJobs(status) {\n  const [jobs, setJobs] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [refreshed, setRefreshed] = useState(0)\n  const [, forceUpdate] = useReducer((x) => x + 1, 0) // FORCE UPDATE HACK\n\n  function refreshPage() {\n    window.location()\n  }\n\n  const fetchJobsByStatus = async (status) => {\n    try {\n      let response = await axios.post('/api/jobs/status', {\n        status: status,\n      })\n      setJobs(response.data.jobs)\n      setLoading(false)\n    } catch (error) {\n      console.log('Hook', error.message)\n    }\n  }\n\n  const editJob = async (jobId, data) => {\n    await axios.put('/api/jobs/update', {\n      jobId,\n      ...data,\n    })\n    refreshPage()\n  }\n\n  const deleteJob = async (jobId) => {\n    try {\n      await axios.delete(`/api/jobs/delete`, {\n        data: {\n          jobId: jobId,\n        },\n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  useEffect(async () => {\n    fetchJobsByStatus(status)\n  }, [])\n\n  return { jobs, editJob, deleteJob, loading }\n}\n"]},"metadata":{},"sourceType":"module"}