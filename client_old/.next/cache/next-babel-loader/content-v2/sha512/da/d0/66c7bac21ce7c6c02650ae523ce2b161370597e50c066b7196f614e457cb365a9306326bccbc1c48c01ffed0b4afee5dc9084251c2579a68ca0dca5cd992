{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is an example of to protect an API route\nimport { getSession } from 'next-auth/client';\nimport axios from 'axios';\nconst url = 'https://j29mwfcm7h.execute-api.us-east-2.amazonaws.com/dev/jobs';\nexport default (async (req, res) => {\n  const session = await getSession({\n    req\n  });\n  const {\n    user: {\n      userId\n    }\n  } = session;\n  const {\n    jobId,\n    jobTitle,\n    company,\n    deadline,\n    location,\n    url,\n    source,\n    salary,\n    jobURL,\n    description,\n    status: {\n      value\n    }\n  } = req.body;\n\n  if (session) {\n    //Add Job\n    // let response = await axios.put(url, {\n    //   userId: userId,\n    //   jobId: jobId,\n    //   title: jobTitle,\n    //   status: value,\n    //   ...req.body\n    // })\n    // res.send({ success: 'Successfully created user', user: response.data })\n    console.log(_objectSpread({\n      userId: userId,\n      jobId: jobId,\n      title: jobTitle,\n      status: value\n    }, req.body));\n  } else {\n    res.send({\n      error: 'You must be sign in to view the protected content on this page.'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/klay/Documents/Seekr/client/pages/api/jobs/update.js"],"names":["getSession","axios","url","req","res","session","user","userId","jobId","jobTitle","company","deadline","location","source","salary","jobURL","description","status","value","body","console","log","title","send","error"],"mappings":";;;;;;AAAA;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,iEAAZ;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,OAAO,GAAG,MAAML,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAhC;AACA,QAAM;AACJG,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFF,OAFJ;AAIA,QAAM;AACJG,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,QANI;AAOJV,IAAAA,GAPI;AAQJW,IAAAA,MARI;AASJC,IAAAA,MATI;AAUJC,IAAAA,MAVI;AAWJC,IAAAA,WAXI;AAYJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAZJ,MAaFf,GAAG,CAACgB,IAbR;;AAeA,MAAId,OAAJ,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAe,IAAAA,OAAO,CAACC,GAAR;AACEd,MAAAA,MAAM,EAAEA,MADV;AAEEC,MAAAA,KAAK,EAAEA,KAFT;AAGEc,MAAAA,KAAK,EAAEb,QAHT;AAIEQ,MAAAA,MAAM,EAAEC;AAJV,OAKKf,GAAG,CAACgB,IALT;AAOD,GAjBD,MAiBO;AACLf,IAAAA,GAAG,CAACmB,IAAJ,CAAS;AACPC,MAAAA,KAAK,EAAE;AADA,KAAT;AAGD;AACF,CA3CD","sourcesContent":["// This is an example of to protect an API route\nimport { getSession } from 'next-auth/client'\nimport axios from 'axios'\n\nconst url = 'https://j29mwfcm7h.execute-api.us-east-2.amazonaws.com/dev/jobs'\n\nexport default async (req, res) => {\n  const session = await getSession({ req })\n  const {\n    user: { userId },\n  } = session\n\n  const {\n    jobId,\n    jobTitle,\n\n    company,\n    deadline,\n    location,\n    url,\n    source,\n    salary,\n    jobURL,\n    description,\n    status: { value },\n  } = req.body\n\n  if (session) {\n    //Add Job\n    // let response = await axios.put(url, {\n    //   userId: userId,\n    //   jobId: jobId,\n    //   title: jobTitle,\n    //   status: value,\n    //   ...req.body\n    // })\n    // res.send({ success: 'Successfully created user', user: response.data })\n    console.log({\n      userId: userId,\n      jobId: jobId,\n      title: jobTitle,\n      status: value,\n      ...req.body,\n    })\n  } else {\n    res.send({\n      error: 'You must be sign in to view the protected content on this page.',\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}