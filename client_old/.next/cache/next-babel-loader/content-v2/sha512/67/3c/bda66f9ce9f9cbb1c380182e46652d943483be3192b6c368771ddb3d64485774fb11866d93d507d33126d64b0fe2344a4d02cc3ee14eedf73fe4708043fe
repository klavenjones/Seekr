{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is an example of to protect an API route\nimport { getSession } from 'next-auth/client';\nimport { currencyFormatter } from '../../../util/currencyFormatter';\nimport axios from 'axios';\nexport default (async (req, res) => {\n  const session = await getSession({\n    req\n  });\n  const {\n    user: {\n      userId\n    }\n  } = session;\n  const {\n    jobId,\n    jobTitle,\n    company,\n    deadline,\n    location,\n    url,\n    source,\n    salary,\n    description,\n    status: {\n      value\n    }\n  } = req.body;\n  const updateUrl = `https://j29mwfcm7h.execute-api.us-east-2.amazonaws.com/dev/jobs/${jobId}`; //Update Job\n\n  if (session) {\n    let response = await axios.put(updateUrl, _objectSpread(_objectSpread({}, req.body), {}, {\n      salary: currencyFormatter(Number(salary)),\n      userId: userId,\n      jobId: jobId,\n      title: jobTitle,\n      status: value\n    }));\n    res.send({\n      success: 'Successfully created user',\n      user: response.data\n    });\n  } else {\n    res.send({\n      error: 'You must be sign in to view the protected content on this page.'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/klay/Documents/Seekr/client/pages/api/jobs/update.js"],"names":["getSession","currencyFormatter","axios","req","res","session","user","userId","jobId","jobTitle","company","deadline","location","url","source","salary","description","status","value","body","updateUrl","response","put","Number","title","send","success","data","error"],"mappings":";;;;;;AAAA;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,OAAO,GAAG,MAAML,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAhC;AACA,QAAM;AACJG,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFF,OAFJ;AAIA,QAAM;AACJG,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,GANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA,WATI;AAUJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAVJ,MAWFf,GAAG,CAACgB,IAXR;AAaA,QAAMC,SAAS,GAAI,mEAAkEZ,KAAM,EAA3F,CAnBiC,CAqBjC;;AACA,MAAIH,OAAJ,EAAa;AACX,QAAIgB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUF,SAAV,kCAChBjB,GAAG,CAACgB,IADY;AAEnBJ,MAAAA,MAAM,EAAEd,iBAAiB,CAACsB,MAAM,CAACR,MAAD,CAAP,CAFN;AAGnBR,MAAAA,MAAM,EAAEA,MAHW;AAInBC,MAAAA,KAAK,EAAEA,KAJY;AAKnBgB,MAAAA,KAAK,EAAEf,QALY;AAMnBQ,MAAAA,MAAM,EAAEC;AANW,OAArB;AAQAd,IAAAA,GAAG,CAACqB,IAAJ,CAAS;AAAEC,MAAAA,OAAO,EAAE,2BAAX;AAAwCpB,MAAAA,IAAI,EAAEe,QAAQ,CAACM;AAAvD,KAAT;AACD,GAVD,MAUO;AACLvB,IAAAA,GAAG,CAACqB,IAAJ,CAAS;AACPG,MAAAA,KAAK,EAAE;AADA,KAAT;AAGD;AACF,CArCD","sourcesContent":["// This is an example of to protect an API route\nimport { getSession } from 'next-auth/client'\nimport { currencyFormatter } from '../../../util/currencyFormatter'\nimport axios from 'axios'\n\nexport default async (req, res) => {\n  const session = await getSession({ req })\n  const {\n    user: { userId },\n  } = session\n\n  const {\n    jobId,\n    jobTitle,\n    company,\n    deadline,\n    location,\n    url,\n    source,\n    salary,\n    description,\n    status: { value },\n  } = req.body\n\n  const updateUrl = `https://j29mwfcm7h.execute-api.us-east-2.amazonaws.com/dev/jobs/${jobId}`\n\n  //Update Job\n  if (session) {\n    let response = await axios.put(updateUrl, {\n      ...req.body,\n      salary: currencyFormatter(Number(salary)),\n      userId: userId,\n      jobId: jobId,\n      title: jobTitle,\n      status: value,\n    })\n    res.send({ success: 'Successfully created user', user: response.data })\n  } else {\n    res.send({\n      error: 'You must be sign in to view the protected content on this page.',\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}